---

- name: Use SAPCAR to extract SWPM SAR file
  command: >-
    {{ sap_s4hana_deployment_sapcar_path }}/{{ sap_s4hana_deployment_sapcar_file_name }} \
    -xvf {{ sap_s4hana_deployment_swpm_path }}/{{ sap_s4hana_deployment_swpm_sar_file_name }} \
    -manifest SIGNATURE.SMF
  register: extractswpm
  args:
    chdir: "{{ sap_s4hana_deployment_sapcar_path }}"
  changed_when: "'SAPCAR: processing archive' in extractswpm.stdout"

- name: Setting fact for S/4 HANA installer path
  set_fact:
    sapinst_path: "{{ sap_s4hana_deployment_sapcar_path }}"

- name: create temporary directory to store the processed template
  tempfile:
    state: directory
    suffix: s4hanaconfig
  register: tmpdir

- name: Process S4HANA Configfile Template
  template:
    src: "{{ role_path }}/templates/{{ installation_type }}"
    dest: "{{ tmpdir.path }}/inifile.params"
  register: cftemplate

- name: Copy password file to the same location as inifile.params
  copy:
    src: "{{ sap_s4hana_deployment_password_file_path }}/instkey.pkey"
    dest: "{{ tmpdir.path }}/instkey.pkey"
    remote_src: yes
  when: sap_s4hana_deployment_use_password_file == "y"

- name: Install SAP S4HANA
  command: >-
    ./sapinst SAPINST_INPUT_PARAMETERS_URL={{ tmpdir.path }}/inifile.params \
    SAPINST_EXECUTE_PRODUCT_ID={{ sap_s4hana_deployment_product_id }} \
    SAPINST_SKIP_DIALOGS=true SAPINST_START_GUISERVER=false
  register: installs4hana
  args:
    chdir: "{{ sapinst_path }}"
  when: true
  changed_when: "'SAPinst build information' in installs4hana.stdout"
